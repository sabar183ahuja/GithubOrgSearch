import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.mannodermaus.android-junit5'
apply from: '../gradle/detekt.gradle'
apply from: '../gradle/test-logger.gradle'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.sabar.githuborgsearch"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            returnDefaultValues = true

            all {
                useJUnitPlatform()

                testLogging {
                    events = [TestLogEvent.PASSED, TestLogEvent.FAILED, TestLogEvent.SKIPPED, TestLogEvent.STANDARD_OUT, TestLogEvent.STANDARD_ERROR]
                    exceptionFormat = TestExceptionFormat.FULL
                    showStackTraces = true
                    showCauses = true
                    showExceptions = true
                }
            }
        }
    }

    // JUnit 5 will bundle in files with identical paths; exclude them
    packagingOptions {
        exclude "META-INF/LICENSE*"
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.browser:browser:$androidXBrowserVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "androidx.fragment:fragment:$fragmentVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-androidx-fragment:$koinVersion"
    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"
    implementation "com.saurabharora.customtabs:customtabs:$customTabsKotlinVersion"
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugarJdkLibsVersion"

    // Local Unit Test Dependencies
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    testImplementation "androidx.arch.core:core-testing:$archCoreTestingVersion"
    testImplementation "androidx.test:core:$testCoreVersion"
    testImplementation "androidx.test:core-ktx:$testCoreVersion"
    testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core:$kotestVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"

    // Android Instrumented Test Dependencies
    androidTestImplementation "androidx.test:core:$testCoreVersion"
    androidTestImplementation "androidx.test:core-ktx:$testCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:$testCoreVersion"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:$testRunnerVersion"
    androidTestImplementation "io.kotest:kotest-runner-junit5:$kotestVersion"
    androidTestImplementation "io.kotest:kotest-assertions-core:$kotestVersion"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
}
